[
  {
    "level_id": 1,
    "description": "Introduction to AND",
    "type": "bitwise",
    "level_num": 1,
    "difficulty": 1,
    "content": [
      {
        "type": "text",
        "data": "This tutorial deals with the concept of the bitwise AND operator."
      },
      {
        "type": "text",
        "data": "The AND operator is useful for Bitmasking, which is used to determine which bits in a given binary representation are set.\nBitwise AND:\nBitwise AND is essentially looking at two bits and returning the logical AND operation result of them, that is to say returning 1 if and only if both bits are also 1."
      },
      {
        "type": "text",
        "data": "For example, in the following two binary representations:\n1010\n1000\nThe result of a Bitwise AND operation on them would return:\n1000"
      },
      {
        "type": "text",
        "data": "As the most significant digit is the only position where both binary values contain a 1, any comparison between a 1 and 0 like in the 3rd most significant digit or between two 0s will return a 0. This is used for Bit Masking, which involves hiding all non-relevant digits in a binary value to see what the value at a specific position is:\n1010\n0010\n----\n0010\nThis reveals that the 3rd most significant digit in the top value is set to 1."
      }
    ]
  },

  {
    "level_id": 2,
    "description": "Introduction to OR",
    "type": "bitwise",
    "level_num": 2,
    "difficulty": 1,
    "content": [
      {
        "type": "text",
        "data": "This tutorial deals with the concept of the bitwise OR operator."
      },
      {
        "type": "text",
        "data": "Bitwise OR:\nA bitwise OR takes two binary values and performs the logical inclusive OR operation on each pair of corresponding bits. This essentially means that the result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1; otherwise, the result is 0."
      },
      {
        "type": "text",
        "data": "For example:\n0011\n0101\nWill produce the string\n0111\nThe most significant position contains 2 0s and thus the result is 0. The next two positions contain a 0 and a 1 so the result will be a one. Finally the least significant position contains a 1 and a 1, so the result will be a 1."
      }
    ]
  },

  {
    "level_id": 3,
    "description": "Introduction to NOT",
    "type": "bitwise",
    "level_num": 3,
    "difficulty": 1,
    "content": [
      {
        "type": "text",
        "data": "This tutorial deals with the concept of the bitwise NOT operator."
      },
      {
        "type": "text",
        "data": "Bitwise NOT:\nThe bitwise NOT is an operation that performs logical negation on each bit. Bits that are 0 become 1, and those that are 1 become 0."
      },
      {
        "type": "text",
        "data": "For example:\n0001\nBecomes\n1110"
      }
    ]
  },

  {
    "level_id": 4,
    "description": "Introduction to XOR",
    "type": "bitwise",
    "level_num": 4,
    "difficulty": 1,
    "content": [
      {
        "type": "text",
        "data": "This tutorial deals with the concept of the bitwise XOR operator."
      },
      {
        "type": "text",
        "data": "Bitwise XOR:\nThe Bitwise OR is similar to OR, except that only when the input is a pair of 1 and 0 or 0 and 1 will it return 1. That is to say, a 1 and 1 will not result in a 1."
      },
      {
        "type": "text",
        "data": "For example:\n0011\n0101\nWill produce the string\n0110"
      }
    ]
  },

  {
    "level_id": 5,
    "description": "Introduction to NAND",
    "type": "bitwise",
    "level_num": 5,
    "difficulty": 1,
    "content": [
      {
        "type": "text",
        "data": "This tutorial deals with the concept of the bitwise NAND operator."
      },
      {
        "type": "text",
        "data": "Bitwise NAND:\nThe bitwise NAND is a combination of a NOT and AND gate. This means that the resulting output is always flipped from that of the AND gate. An input of 1 and 1 will result in a 0 while all other inputs will result in a 1."
      },
      {
        "type": "text",
        "data": "For example:\n1010\n1000\nWill result in\n0111"
      }
    ]
  },

  {
    "level_id": 6,
    "description": "Introduction to NOR",
    "type": "bitwise",
    "level_num": 6,
    "difficulty": 1,
    "content": [
      {
        "type": "text",
        "data": "Since you have learned OR in the previous level, it is difficult for you to learn NOR."
      },
	    {
        "type": "text",
        "data": "NOR is like NOT OR. All you need to do is to perform OR operation, and flip all the bits in the result."
      },
	    {
        "type": "text",
        "data": "Here is an example:"
      },
      {
        "type": "image",
        "data": "http://s5.postimg.org/j8icomovr/NOR_example.jpg"
      }
    ]
  },

  {
    "level_id": 7,
    "description": "Introduction to Left Shift",
    "type": "bitwise",
    "level_num": 7,
    "difficulty": 1,
    "content": [
      {
        "type": "text",
        "data": "Shift the bits to the left. Zeros are shifted in to replace the discarded bits."
      },
	    {
        "type": "text",
        "data": "Here's the example: [Wikipedia, http://en.wikipedia.org/wiki/Bitwise_operation#Bit_shifts]"
      },
      {
        "type": "image",
        "data": "http://s5.postimg.org/65mq5cynr/left_Shift_example.jpg"
      }
    ]
  },

  {
    "level_id": 8,
    "description": "Introduction to Right Shift",
    "type": "bitwise",
    "level_num": 8,
    "difficulty": 1,
    "content": [
      {
        "type": "text",
        "data": "Shift the bits to the right. Zeros are shifted in to replace the discarded bits."
      },
	    {
        "type": "text",
        "data": "Here is an example: [Expedia, http://en.wikipedia.org/wiki/Bitwise_operation#Bit_shifts]"
      },
      {
        "type": "image",
        "data": "http://s5.postimg.org/wj1m4eq2f/right_Shift_example.jpg"
      }
    ]
  },

  {
    "level_id": 9,
    "description": "Introduction: Converting Base 2 to Base 10",
    "type": "bases",
    "level_num": 1,
    "difficulty": 1,
    "content": [
      {
        "type": "text",
        "data": "Example with explanation: Covert binary number 10101011 to decimal."
      },
      {
        "type": "image",
        "data": "http://s5.postimg.org/izpdcg1h3/Base2_10.jpg"
      },
      {
        "type": "text",
        "data": "Therefore binary number 10101011 is equivalent to decimal number 171."
      }
    ]
  },

  {
    "level_id": 10,
    "description": "Introduction: Converting Base 10 to Base 2",
    "type": "bases",
    "level_num": 2,
    "difficulty": 1,
    "content": [
      {
        "type": "text",
        "data": "Example with explanation: Convert decimal number 78 to decimal."
      },
	    {
        "type": "text",
        "data": "Divide the number repeatedly by 2 until reach 1, keep track of the remainder."
      },
      {
        "type": "image",
        "data": "http://s5.postimg.org/4o19tstx3/Base10_2.jpg"
      },
      {
        "type": "text",
        "data": "Summarize the remainder from bottom to top, and appending a one to the left of the result. Therefore decimal number 78 is equivalent to binary number 1001110."
      }
    ]
  },

  {
    "level_id": 11,
    "description": "Introduction: Converting Base 2 to Base 16",
    "type": "bases",
    "level_num": 3,
    "difficulty": 1,
    "content": [
      {
        "type": "text",
        "data": "Lorem ipsum"
      },
      {
        "type": "image",
        "data": "http://i.imgur.com/MAfHEIG.jpg"
      },
      {
        "type": "video",
        "data": "http://i.imgur.com/ipom2Nn.webm"
      }
    ]
  },

  {
    "level_id": 12,
    "description": "Introduction: Converting Base 16 to Base 2",
    "type": "bases",
    "level_num": 4,
    "difficulty": 1,
    "content": [
      {
        "type": "text",
        "data": "Lorem ipsum"
      },
      {
        "type": "image",
        "data": "http://i.imgur.com/MAfHEIG.jpg"
      },
      {
        "type": "video",
        "data": "http://i.imgur.com/ipom2Nn.webm"
      }
    ]
  },

    {
    "level_id": 13,
    "description": "Introduction: Converting Base 10 to Base 16",
    "type": "bases",
    "level_num": 5,
    "difficulty": 3,
    "content": [
      {
        "type": "text",
        "data": "Lorem ipsum"
      },
      {
        "type": "image",
        "data": "http://i.imgur.com/MAfHEIG.jpg"
      },
      {
        "type": "video",
        "data": "http://i.imgur.com/ipom2Nn.webm"
      }
    ]
  },

  {
    "level_id": 14,
    "description": "Introduction: Converting Base 16 to Base 10",
    "type": "bases",
    "level_num": 6,
    "difficulty": 2,
    "content": [
      {
        "type": "text",
        "data": "Lorem ipsum"
      },
      {
        "type": "image",
        "data": "http://i.imgur.com/MAfHEIG.jpg"
      },
      {
        "type": "video",
        "data": "http://i.imgur.com/ipom2Nn.webm"
      }
    ]
  }
]
